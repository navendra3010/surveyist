// void _showAlertDialog(BuildContext context, String item) {
//     showDialog(
//       context: context,
//       builder: (BuildContext context) {
//         return AlertDialog(
//           title: Text('Alert for $item'),
//           content: Text('This is the alert content.'),
//           actions: <Widget>[
//             TextButton(
//                 onPressed: () => Navigator.pop(context), child: Text('OK')),
//           ],
//         );
//       },
//     );
//   }


 Container(
              child: Row(
                mainAxisAlignment: MainAxisAlignment.end,
                children: [
                  Container(
                    // height: MediaQuery.of(context).size.height * 5/ 100,
                    //width: MediaQuery.of(context).size.width * 30 / 100,
                    // color:Colors.amberAccent,
                    child: Image.asset(
                      Appimage.Notification,
                      fit: BoxFit.fill,
                      cacheHeight: 25,
                    ),
                  ),
                ],
              ),
            ),
            ---------------------------------------
             
            SizedBox(
              height: MediaQuery.of(context).size.height * 2 / 100,
            ),
            ---------------------------------------
            Center(
              child: Container(
                //height: MediaQuery.of(context).size.height * 15 / 100,
                width: MediaQuery.of(context).size.width * 90 / 100,
                //color:Colors.amberAccent,
                decoration: BoxDecoration(
                    border: Border.all(width: 0.5),
                    borderRadius: BorderRadius.all(Radius.circular(15)),
                   // color: const Color.fromARGB(255, 249, 250, 250),
                  //   color = Color(0xffb74093)
                 // color
                    
                    ),
                child: Column(
                  children: [
                    Text(
                      "Today_Task",
                      style: TextStyle(
                          fontFamily: AppFont.fontFamily,
                          fontSize: 25,
                          fontWeight: FontWeight.w600),
                    ),
                    Text(Applanguage.todayTask[Applanguage.language],
                        maxLines: 2,
                        textAlign: TextAlign.center,
                        overflow: TextOverflow.clip,
                        style: TextStyle(
                            fontFamily: AppFont.fontFamily,
                            fontSize: 15,
                            color: const Color.fromARGB(255, 117, 119, 117),
                            fontWeight: FontWeight.w500)),
                    SizedBox(
                      height: MediaQuery.of(context).size.height * 0.5 / 100,
                    ),
                    TextButton(
                        onPressed: () {
                          Navigator.push(
                              context,
                              MaterialPageRoute(
                                  builder: (context) => TaskDetails()));
                        },
                        child: Text("click_here")),
                  ],
                ),
              ),
            ),
            ---------------------------------------
             
            SizedBox(
              height: MediaQuery.of(context).size.height * 1 / 100,
            ),
            ---------------------------------------
            Container(
              child: Text("Categories",
                  style: TextStyle(
                      fontFamily: AppFont.fontFamily,
                      fontSize: 15,
                      color: Colors.black87,
                      fontWeight: FontWeight.w600)),
            ),
            ---------------------------------------
            
            
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                InkWell(onTap: () {
                  print("tap on attenafce");
                },
                  child: Container(
                    height: MediaQuery.of(context).size.height * 13 / 100,
                    width: MediaQuery.of(context).size.width * 40 / 100,
                    // color:Colors.amberAccent,
                    decoration: BoxDecoration(
                        //border:Border.all(width: 0.5)
                        borderRadius: BorderRadius.all(Radius.circular(15)),
                        color: const Color.fromARGB(255, 204, 192, 192)),
                    child: Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Container(
                            height: MediaQuery.of(context).size.height * 5 / 100,
                            width: MediaQuery.of(context).size.width * 10 / 100,
                            decoration: BoxDecoration(
                                image: DecorationImage(
                                    image: AssetImage(Appimage.attendance),
                                    fit: BoxFit.fill)),
                          ),
                          Text("Attendance",
                              style: TextStyle(
                                  fontFamily: AppFont.fontFamily,
                                  fontSize: 13,
                                  color: Colors.black,
                                  fontWeight: FontWeight.w600)),
                        ],
                      ),
                    ),
                  ),
                ),
                InkWell(onTap:() {
                  print("tap on  task");
                },
                  child: Container(
                    height: MediaQuery.of(context).size.height * 13 / 100,
                    width: MediaQuery.of(context).size.width * 40 / 100,
                    // color:Colors.amberAccent,
                    decoration: BoxDecoration(
                        //border:Border.all(width: 0.5)
                        borderRadius: BorderRadius.all(Radius.circular(15)),
                        color: const Color.fromARGB(255, 204, 192, 192)),
                    child: Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Container(
                            height: MediaQuery.of(context).size.height * 5 / 100,
                            width: MediaQuery.of(context).size.width * 10 / 100,
                            decoration: BoxDecoration(
                                image: DecorationImage(
                                    image: AssetImage(Appimage.task),
                                    fit: BoxFit.fill)),
                          ),
                          Text("Task",
                              style: TextStyle(
                                  fontFamily: AppFont.fontFamily,
                                  fontSize: 13,
                                  color: Colors.black,
                                  fontWeight: FontWeight.w600)),
                        ],
                      ),
                    ),
                  ),
                ),
              ],
            ),
            ---------------------------------------
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                InkWell(onTap: () {
                  print("tap on attenafce");
                },
                  child: Container(
                    height: MediaQuery.of(context).size.height * 13 / 100,
                    width: MediaQuery.of(context).size.width * 40 / 100,
                    // color:Colors.amberAccent,
                    decoration: BoxDecoration(
                        //border:Border.all(width: 0.5)
                        borderRadius: BorderRadius.all(Radius.circular(15)),
                        color: const Color.fromARGB(255, 204, 192, 192)),
                    child: Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Container(
                            height: MediaQuery.of(context).size.height * 5 / 100,
                            width: MediaQuery.of(context).size.width * 10 / 100,
                            decoration: BoxDecoration(
                                image: DecorationImage(
                                    image: AssetImage(Appimage.leave),
                                    fit: BoxFit.fill)),
                          ),
                          Text("Leave_Request",
                              style: TextStyle(
                                  fontFamily: AppFont.fontFamily,
                                  fontSize: 13,
                                  color: Colors.black,
                                  fontWeight: FontWeight.w600)),
                        ],
                      ),
                    ),
                  ),
                ),
                InkWell(onTap:() {
                  print("tap on  task");
                },
                  child: Container(
                    height: MediaQuery.of(context).size.height * 13 / 100,
                    width: MediaQuery.of(context).size.width * 40 / 100,
                    // color:Colors.amberAccent,
                    decoration: BoxDecoration(
                        //border:Border.all(width: 0.5)
                        borderRadius: BorderRadius.all(Radius.circular(15)),
                        color: const Color.fromARGB(255, 204, 192, 192)),
                    child: Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Container(
                            height: MediaQuery.of(context).size.height * 5 / 100,
                            width: MediaQuery.of(context).size.width * 10 / 100,
                            decoration: BoxDecoration(
                                image: DecorationImage(
                                    image: AssetImage(Appimage.time),
                                    fit: BoxFit.fill)),
                          ),
                          Text("Time_Tracking",
                              style: TextStyle(
                                  fontFamily: AppFont.fontFamily,
                                  fontSize: 13,
                                  color: Colors.black,
                                  fontWeight: FontWeight.w600)),
                        ],
                      ),
                    ),
                  ),
                ),
              ],
            ),
            ---------------------------------------
            Center(
                        child: Container(
                          //height: MediaQuery.of(context).size.height * 15 / 100,
                          width: MediaQuery.of(context).size.width * 90 / 100,

                          decoration: BoxDecoration(
                            border: Border.all(width: 0.5),
                            borderRadius: BorderRadius.all(Radius.circular(15)),
                            color: Colors.white,
                          ),
                          child: Column(
                            children: [
                              Text(
                                "Today_Task",
                                style: TextStyle(
                                    fontFamily: AppFont.fontFamily,
                                    fontSize: 25,
                                    fontWeight: FontWeight.w600),
                              ),
                              Text(Applanguage.todayTask[Applanguage.language],
                                  maxLines: 2,
                                  textAlign: TextAlign.center,
                                  overflow: TextOverflow.clip,
                                  style: TextStyle(
                                      fontFamily: AppFont.fontFamily,
                                      fontSize: 15,
                                      color: const Color.fromARGB(
                                          255, 117, 119, 117),
                                      fontWeight: FontWeight.w500)),
                              SizedBox(
                                height: MediaQuery.of(context).size.height *
                                    0.5 /
                                    100,
                              ),
                              TextButton(
                                  onPressed: () {
                                    Navigator.push(
                                        context,
                                        MaterialPageRoute(
                                            builder: (context) =>
                                                TaskDetails()));
                                  },
                                  child: Text("click_here")),
                            ],
                          ),
                        ),
                      ),
      ==============================
      Container(
                          height: MediaQuery.of(context).size.height * 10 / 100,
                          width: MediaQuery.of(context).size.width * 50 / 100,
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.all(Radius.circular(15)),
                            //  color: const Color.fromARGB(255, 173, 170, 170)),
                            // color: Colors.white,
                            color: const Color.fromARGB(255, 228, 153, 41),
                          ),
                          child: Column(
                            children: [
                              SizedBox(
                                height: MediaQuery.of(context).size.height *
                                    .05 /
                                    100,
                              ),
                              
                              Text(
                                "${taskList[index]["TaskName"]}",
                                maxLines: 1,
                                overflow: TextOverflow.ellipsis,
                                style: TextStyle(
                                    fontSize: 12,
                                    color: Colors.white,
                                    fontFamily: AppFont.fontFamily,
                                    fontWeight: FontWeight.w600),
                              ),
                              Text(
                                "${taskList[index]["TaskAssignDate"]}",
                                style: TextStyle(
                                  fontSize: 12,
                                  fontWeight: FontWeight.w600,
                                  color: Colors.white,
                                ),
                              ),
                              Text(
                                "${taskList[index]["tasksdueDate"]}",
                                style: TextStyle(
                                  fontSize: 12,
                                  fontWeight: FontWeight.w600,
                                  color: Colors.white,
                                ),
                              ),
                              Text(
                                "${taskList[index]["number"]}",
                                style: TextStyle(
                                  fontSize: 12,
                                  fontWeight: FontWeight.w600,
                                  color: Colors.white,
                                ),
                              ),
                            ],
                          ),
                        ),
===========================
Column(
                      children: [
                        Container(
                          height: MediaQuery.of(context).size.height * 7 / 100,
                          width: MediaQuery.of(context).size.width * 45 / 100,
                          decoration: BoxDecoration(
                              borderRadius:
                                  BorderRadius.all(Radius.circular(15)),
                              //  color: const Color.fromARGB(255, 173, 170, 170)),
                              // color: Colors.white,
                              color: const Color.fromARGB(255, 228, 153, 41)),
                          child: Column(
                            // mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Container(
                                child: Text(
                                  "${taskList[index]["TaskName"]}",
                                  maxLines: 1,
                                  overflow: TextOverflow.ellipsis,
                                  style: TextStyle(
                                      fontSize: 12,
                                      color: Colors.white,
                                      fontFamily: AppFont.fontFamily,
                                      fontWeight: FontWeight.w600),
                                ),
                              ),
                              SizedBox(
                                height: MediaQuery.of(context).size.height *
                                    1 /
                                    100,
                              ),
                              Container(
                                child: Row(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceAround,
                                  children: [
                                    Text(
                                      "${taskList[index]["TaskAssignDate"]}",
                                      style: TextStyle(
                                        fontSize: 12,
                                        fontWeight: FontWeight.w600,
                                        color: Colors.white,
                                      ),
                                    ),
                                    Text(
                                      "${taskList[index]["status"]}",
                                      style: TextStyle(
                                        fontSize: 12,
                                        fontWeight: FontWeight.w600,
                                        color: Colors.red,
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                    -----------------------------------------------------
                    28-12-2014
                    Column(
              children: [
                const SizedBox(
                  height: 50,
                ),
                const Text("you are not eligible"),
                TextField(
                  controller: agecontroller,
                  decoration: const InputDecoration(
                      hintText: "Enter age......",
                      border: OutlineInputBorder(
                          borderRadius: BorderRadius.all(Radius.circular(10)))),
            
                ),
                TextButton(onPressed: () {
                  
                  
                }, child:Text("check",style:CustomText.nameOfTextStyle,))
                
              ],
                
            
                );
                --------------------------------------------------------------------------------------------------------------------
                User-Specific Device Info: Store device info under the authenticated user’s document (/users/{uid}/device_info).
Multiple Devices Per User: Store devices as subcollections (/users/{uid}/devices/{deviceId}).
Tracking Multiple Logins: Use add() instead of set() to create a new entry every time (.collection('device_logs').add(deviceData)).
--------------------------------------------------------------------------------------------------------------------------------- 
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-----------------------------------------------------
await FirebaseauthenticationStatus.auth
            .createUserWithEmailAndPassword(
                email: userReg.email!, password: userReg.password!)
            .then((value) async {
          isloading = true;
          notifyListeners();
          ShowTaostMessage.toastMessage(context, "Succesfully Account created");

          createdUserID = value.user!.uid;
          print(
              "after create user account thier current user id is ${createdUserID}");
          //this code for fire store account
          Future<bool> isStatus = userCreatedInFirestore(
              createdUserID, userReg.email, userReg.password, userReg.role);
          if (await isStatus) {
            ShowTaostMessage.toastMessage(
                context, "account created on firestore");
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => LoginScreenForAll()),
            );
          }
        });
      } on PlatformException catch (e) {
        String message;

        if (e.code == 'invalid-credential') {
          message = 'Invalid credentials. Please check your details.';
        } else {
          message = 'Platform error. Please try again.';
        }

        isloading = false;
        notifyListeners();
        ShowTaostMessage.toastMessage(context, message);
      } catch (e) {
        print("Unknown error: $e");
        isloading = false;
        notifyListeners();
        ShowTaostMessage.toastMessage(
          context,
          'An unexpected error occurred. Please try again.',
        );
      }
    }